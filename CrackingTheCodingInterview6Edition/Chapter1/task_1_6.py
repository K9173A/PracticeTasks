"""
Дано: изображение в виде матрицы размером N x N, где каждый пиксель занимает
4 байта. Напишите метод, поворачивающий изображение на 90 градусов.
"""


def turn_image(matrix):
    """
    Поворачивает матрицу на 90 градусов по часовой стрелке.
    :param matrix: матрица изображения. Для данного задания вместо реального
    изображения используется просто матрица из чисел, каждое из которых может
    в случае необходимости быть заменено на RGB-число, кодирующее цвет.
    Алгоритм будет отличаться незначительно.
    :return: матрица, повёрнутая на 90 градусов по часовой стрелке.
    """
    new_matrix = [[] for _ in range(len(matrix))]

    # Отражает строки матрицы в столбцы
    for i, row in enumerate(matrix):
        for j, element in enumerate(row):
            new_matrix[j].append(element)

    # Инвертирует каждую строку - левые числа оказываются справа, а правые
    # оказываются слева.
    return [row[::-1] for row in new_matrix]


if __name__ == '__main__':
    numbers_matrix = [
        [1, 2, 3, 4, 5],
        [6, 7, 8, 9, 10],
        [11, 12, 13, 14, 15],
        [16, 17, 18, 19, 20],
        [21, 22, 23, 24, 25]
    ]
    print(turn_image(numbers_matrix))
